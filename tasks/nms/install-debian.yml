---
- name: (Debian/Ubuntu) {{ (nms_cleanup_status is defined) | ternary('Remove', 'Configure') }} NGINX Management Suite Apt repository
  ansible.builtin.apt_repository:
    repo: "{{ nms_debian_signing_key_repo }}"
    state: "{{ nms_cleanup_status | default((nms_setup == 'uninstall') | ternary('absent', 'present')) }}"
    update_cache: false
    filename: nms

- name: (Debian/Ubuntu) {{ nms_cleanup_status is defined | ternary('Remove', 'Configure') }} NGINX Plus license verification
  ansible.builtin.blockinfile:
    path: /etc/apt/apt.conf.d/90nginx
    create: true
    block: |
      Acquire::https::{{ (nginx_repository | default(nginx_plus_default_repository_debian)) | regex_search('(?<=https://)[^/]*') }}::Verify-Peer "true";
      Acquire::https::{{ (nginx_repository | default(nginx_plus_default_repository_debian)) | regex_search('(?<=https://)[^/]*') }}::Verify-Host "true";
      Acquire::https::{{ (nginx_repositorynsibl | default(nginx_plus_default_repository_debian)) | regex_search('(?<=https://)[^/]*') }}::SslCert     "/etc/ssl/nginx/nginx-repo.crt";
      Acquire::https::{{ (nginx_repository | default(nginx_plus_default_repository_debian)) | regex_search('(?<=https://)[^/]*') }}::SslKey      "/etc/ssl/nginx/nginx-repo.key";
    state: "{{ nms_cleanup_status | default((nms_setup == 'uninstall') | ternary('absent', 'present')) }}"
    mode: "0444"

- name: (Debian/Ubuntu) {{ nms_setup | capitalize }} NGINX Instance Manager
  ansible.builtin.apt:
    name: "nms-instance-manager{{ (nms_version is not defined or nms_version == '') | ternary('', '=' + nms_version) }}"
    update_cache: true
    allow_downgrade: "{{ omit if ansible_version.full is version('2.12', '<') else true }}"
    state: "{{ nms_state }}"
  register: nms_install_state
  when: nms_cleanup_status is not defined

- name: (Debian/Ubuntu) NMS Modules
  ansible.builtin.apt:
    name: "{{ item.name }}={{ '*' if (item.version is not defined or item.version == '') else item.version }}"
    update_cache: true
    allow_downgrade: "{{ omit if ansible_version.full is version('2.12', '<') else true }}"
    state: "{{ nms_state if item.setup is not defined else nms_state_vals[item.setup] }}"
  when:
    - nms_cleanup_status is not defined
    - nms_modules is defined
  loop: "{{ nms_modules }}"
  loop_control:
    label: "{{ item.name }}"
  notify:
    - Restart NGINX Management Suite
    - Restart NGINX

- name: (Debian/Ubuntu) Make sure NGINX Management Suite is running
  ansible.builtin.systemd:
    state: started
    name: nms
    enabled: true
  notify: Restart NGINX
  when:
    - nms_cleanup_status is not defined
    - nms_setup | lower != 'uninstall'
