---
- name: (Debian/Ubuntu) Installing prerequisites required for changing password
  ansible.builtin.apt:
    name: python3-passlib
  when: ansible_facts.os_family == 'Debian'
  tags:
    - nms_config_password

- name: (RHEL8+) Installing prerequisites required for changing password
  block:
    - name: (RHEL8+) Installing 'pip'
      ansible.builtin.yum:
        name:
          - python3-pip
    - name: (RHEL8+) Installing 'passlib' for password configuration
      ansible.builtin.pip:
        name: passlib
  when: ansible_facts.distribution_major_version >= '8' and ansible_facts.os_family == 'RedHat'
  tags:
    - nms_config_password

- name: (Amazon/RHEL7/Oracle Linux) Installing prerequisites required for changing password
  block:
    - name: (Amazon/RHEL7/Oracle Linux) Get version 2.7 'pip' script
      ansible.builtin.get_url:
        url: "{{ nms_redhat7_pip27 }}"
        dest: "/tmp/get-pip.py"
    - name: Check if 'pip' binary exists
      ansible.builtin.stat:
        path: /usr/bin/pip
      ignore_errors: true
      register: pip
    - name: (Amazon/RHEL7/Oracle Linux) Install 'pip' version 2.7
      ansible.builtin.shell: "python get-pip.py"
      args:
        chdir: /tmp/
      when: not pip.stat.exists
    - name: (Amazon/RHEL7/Oracle Linux) Installing 'passlib' for password configuration
      ansible.builtin.pip:
        name: passlib
  when:  ansible_facts.distribution_major_version <= '7' and ansible_facts.os_family == 'RedHat'
  tags:
    - nms_config_password

- name: Generate a random string with 1 lower, 1 upper, 1 number and 1 special char (atleast)
  block:
    - ansible.builtin.set_fact:
        nms_password: "{{ (nms_password | length > 0) | ternary(nms_password, lookup('community.general.random_string', override_special='!#$%&()*+,-./:;<=>?@[]^_{|}~', min_lower=1, min_upper=1, min_special=1, min_numeric=1, length=12)) }}"
    - name: Printing password for each host
      ansible.builtin.debug:
        var: nms_password
    - name: Add a user to a password file and ensure permissions are set
      community.general.htpasswd:
        path: "{{ nms_cred_path }}"
        name: "{{ nms_username }}"
        password: "{{nms_password}}"
      notify:
        - Restart NGINX Management Suite
    - name: Login credentials
      ansible.builtin.debug:
        msg: "The login for {{ ansible_host }}: {{ nms_username }} / {{ nms_password }}"
  when: nms_force_password | bool or nms_install_state is defined and nms_install_state.changed | bool
  tags:
    - nms_config_password
